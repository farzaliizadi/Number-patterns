"""
Created on Fri Jan 11 23:29:16 2019

@author: Izadi
"""
'''
Beautiful number pattern: By by courtesy of
Professor Geoffrey Campbell 
Visiting Fellow, Mathematical Sciences Institute,
Australian National University
Canberra, Australia
who provided formulas for the patterns. 
'''
  

for n in [1,2,3,4,5,6]:
    m=(10**(6*n) -1)/27
    print(m)
    
    
''' output:

a. (10^6 - 1)/27 = 37037, 
b. (10^12 - 1)/27 = 37037037037, 
c. (10^18 - 1)/27 = 37037037037037037, 
d. (10^24 - 1)/27 = 37037037037037037037037, 
e. (10^30 - 1)/27 = 37037037037037037037037037037, 
f. (10^36 - 1)/27 = 37037037037037037037037037037037037. 
'''

for n in [1,2,3,4,5,6]:
    m=(10**(6*n) -1)/(27*11*111)
    print(m)
    
    
''' output:
    
a. (10^(6) - 1)/(9*11*111) = 91, 
b. (10^(12) - 1)/(9*11*111) = 91000091, 
c. (10^(18) - 1)/(9*11*111) = 91000091000091, 
d. (10^(24) - 1)/(9*11*111) = 91000091000091000091, 
e. (10^(30) - 1)/(9*11*111) = 91000091000091000091000091, 
f. (10^(36) - 1)/(9*11*111) = 91000091000091000091000091000091.
'''

for n in [1,2,3,4,5,6]:
    m=(10**(6*n) -1)/(9*13*111)         """******************************""""
    print(m)
    
    
 ''' output:
     
     
    a. (10^(6) - 1)/(9*13*111) = 77, 
b. (10^(12) - 1)/(9*13*111) = 77000077, 
c. (10^(18) - 1)/(9*13*111) = 77000077000077, 
d. (10^(24) - 1)/(9*13*111) = 77000077000077000077, 
e. (10^(30) - 1)/(9*13*111) = 77000077000077000077000077, 
f. (10^(36) - 1)/(9*13*111) = 77000077000077000077000077000077. 
'''

(10**30-1)/27

(10**36-1)/27

''' output:
    37037037037037037037037037037
91000091000091000091000091
''' 
"""The following plot is the graph of   the ***************************************  case"""
import math 
%matplotlib inline 

from pylab import rcParams
rcParams['figure.figsize'] = 17, 17
     
def f(x):
    a = []
    for t in x:
        a.append((10**(6*t))/(9*13*11))
    return a 
x = np.arange(-0.2, 0.2, 0.01)
g = f(x)
plt.plot(x,g)
plt.show()











   
     
     


'''   